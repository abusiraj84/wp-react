name: Build and Deploy

on:
  push:
    branches:
      - main # Or whichever branch you want to trigger on

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Ensure all branches are available

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18.12.0"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run the build script
      - name: Run build
        run: npm run build

      # Step 5: Remove unnecessary files
      - name: Remove unnecessary files
        shell: bash
        run: |
          shopt -s extglob
          rm -rf !(dist|classes|plugin.php)

      # Step 6: Remove the .github folder
      - name: Remove .github folder
        run: rm -rf .github

      # Step 7: Configure Git
      - name: Configure Git
        run: |
          git config --global user.email "abusiraj84@gmail.com"
          git config --global user.name "abusiraj84"

      # Step 8: Fetch all remote branches
      - name: Fetch all remote branches
        run: |
          git fetch origin

      # Step 9: Check if production branch exists and create it from staging if necessary
      - name: Check and create production branch from staging if necessary
        run: |
          if git show-ref --quiet refs/remotes/origin/production; then
            echo "Production branch exists."
          else
            git checkout staging
            git checkout -b production
            git push origin production
          fi

      # Step 10: Commit and push changes to staging
      - name: Commit and push changes to staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add -A
          git commit -m "Deploy plugin with only dist, classes, and plugin.php" || echo "No changes to commit"
          git push origin staging --force

      # Step 11: Create a Pull Request from staging to production
      - name: Create Pull Request to Production
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: production
          source_branch: staging
          pr_title: "Deploy from Staging to Production"
          pr_body: "This is an automated PR to merge staging into production after build and deploy."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
